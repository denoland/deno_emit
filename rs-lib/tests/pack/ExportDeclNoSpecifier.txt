# mod.ts
import { a, b } from './a.ts';
import * as bMod from './b.ts';
import * as cMod from './c.ts';

console.log(a);
console.log(b);
console.log(bMod.a);
console.log(cMod.b);

# a.ts
const a = 1;
const b = 2;

export { a, b };

# b.ts
import { a } from "./a.ts";
export { a };

# c.ts
export { b };
import { b } from "./a.ts";

# output.js
const pack0 = {
  a: undefined,
  b: undefined,
};
const pack1 = {
  a: undefined,
};
const pack2 = {
  b: undefined,
};

// c.ts
(() => {
Object.defineProperty(pack2, "b", { get: () => pack0.b });
})();

// b.ts
(() => {
Object.defineProperty(pack1, "a", { get: () => pack0.a });
})();

// a.ts
(() => {
const a = 1;
const b = 2;
Object.defineProperty(pack0, "a", { get: () => a });
Object.defineProperty(pack0, "b", { get: () => b });
})();

// mod.ts
console.log(pack0.a);
console.log(pack0.b);
console.log(pack1.a);
console.log(pack2.b);
